name: Create a new release
on:
  push:
    tags:
      - 'v*'
jobs:
  create-and-build-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Get the version out of the tag
        id: get_version
        run: echo "TAGGED_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Checkout project sources
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}


      - name: Parse name of project
        uses: jaywcjlove/github-action-package@main

      - name: Install all dependencies with PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 8.15
          run_install: true

      - name: Build and test the project
        run: |
          # The first two command are required to avoid errors while the NPM-script are running.
          # TODO: Improve the NPM-script
          mkdir lib
          touch tsconfig.*.tsbuildinfo
          # Build project
          pnpm run build
          # Test project
          pnpm test

      - name: Create new artifact
        uses: a7ul/tar-action@v1.1.0
        with:
          command: c
          files: |
            ./lib
          outPath: ./${{ steps.info.outputs.name }}-${{ steps.get_version.outputs.TAGGED_VERSION }}.tar.gz

      - name: Set new version in `package.json`
        uses: jaywcjlove/github-action-package@main
        with:
          version: "${{ steps.get_version.outputs.TAGGED_VERSION }}"

      - name: Commit changes of `package.json`
        uses: Andro999b/push@v1.3
        with:
          message: 'Version ${{ steps.get_version.outputs.TAGGED_VERSION }}'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: 'features/release'
          force: true

      - name: Release artifact/project
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: ./${{ steps.info.outputs.name }}-${{ steps.get_version.outputs.TAGGED_VERSION }}.tar.gz
          name: "${{ steps.get_version.outputs.TAGGED_VERSION }}"
